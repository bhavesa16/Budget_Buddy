{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanik\\\\OneDrive\\\\Desktop\\\\Expense Tracker\\\\expense-tracker_fullstack\\\\frontend\\\\src\\\\Components\\\\Acorn\\\\AcornForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useGlobalContext } from '../../context/globalContext';\nimport Button from '../Button/Button';\nimport { plus } from '../../utils/Icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AcornForm() {\n  _s();\n  const {\n    addSaving,\n    error,\n    setError\n  } = useGlobalContext();\n  const [inputState, setInputState] = useState({\n    amount: '',\n    date: ''\n  });\n  const {\n    amount,\n    date\n  } = inputState;\n  // const [amount, setAmount] = useState('');\n  const [multiplier, setMultiplier] = useState('');\n  const [roundOffValue, setRoundOffValue] = useState('');\n  const [totalAcorns, setTotalAcorns] = useState(null);\n  function isDecimal(num) {\n    return num % 1;\n  }\n  const roundNumber = (number, ndigits) => {\n    debugger;\n    if (!isDecimal(number)) {\n      return Math.ceil(number / 5) * 5;\n    } else {\n      return Math.ceil(number);\n    }\n    // if (ndigits === null) {\n    //   return Math.round(number);\n    // }\n    // const factor = Math.pow(10, ndigits);\n    // return Math.round(number * factor) / factor;/\n  };\n\n  const calculateAcorns = () => {\n    debugger;\n    if (amount !== '' && multiplier !== '' && roundOffValue !== '') {\n      const parsedAmount = parseFloat(amount);\n      const parsedMultiplier = parseFloat(multiplier);\n      const parsedRoundOffValue = parseFloat(roundOffValue);\n      if (!isNaN(parsedAmount) && !isNaN(parsedMultiplier) && !isNaN(parsedRoundOffValue)) {\n        // const total = parsedAmount * parsedMultiplier;\n        const roundedTotal = roundNumber(parsedAmount, parseInt(parsedRoundOffValue));\n        const acorns = roundedTotal - parsedAmount;\n        setTotalAcorns(acorns * parsedMultiplier);\n      } else {\n        alert('Please enter valid numbers');\n      }\n    } else {\n      alert('Please fill in all fields');\n    }\n  };\n  const handleInput = name => e => {\n    // setAmount(e.target.value)\n    setInputState({\n      ...inputState,\n      [name]: e.target.value\n    });\n    setError('');\n  };\n  const handleSubmit = e => {\n    calculateAcorns();\n    setAmount({\n      totalAcorns\n    });\n    e.preventDefault();\n    // setInputState({...inputState, [name]: e.target.value})\n    addSaving(inputState);\n    setInputState({\n      amount: '',\n      date: ''\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(SavingFormStyled, {\n    onSubmit: handleSubmit,\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-control\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: amount,\n        type: \"text\",\n        name: 'amount',\n        placeholder: 'Expense Amount',\n        onChange: handleInput('amount')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"multiplier\",\n        children: \"Multiplier:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"multiplier\",\n        value: multiplier,\n        onChange: e => setMultiplier(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-control\",\n      children: /*#__PURE__*/_jsxDEV(DatePicker, {\n        id: \"date\",\n        placeholderText: \"Enter A Date\",\n        selected: date,\n        dateFormat: \"dd/MM/yyyy\",\n        onChange: date => {\n          setInputState({\n            ...inputState,\n            date: date\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"submit-btn\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        name: 'Add Saving',\n        icon: plus,\n        bPad: '.8rem 1.6rem',\n        bRad: '30px',\n        bg: 'var(--color-accent',\n        color: '#fff'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(AcornForm, \"TEckc+grcWYCUarAX4HggD21QPc=\", false, function () {\n  return [useGlobalContext];\n});\n_c = AcornForm;\nconst SavingFormStyled = styled.form`\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n    input, textarea, select{\n        font-family: inherit;\n        font-size: inherit;\n        outline: none;\n        border: none;\n        padding: .5rem 1rem;\n        border-radius: 5px;\n        border: 2px solid #fff;\n        background: transparent;\n        resize: none;\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n        color: rgba(34, 34, 96, 0.9);\n        &::placeholder{\n            color: rgba(34, 34, 96, 0.4);\n        }\n    }\n    .input-control{\n        input{\n            width: 100%;\n        }\n    }\n\n    .selects{\n        display: flex;\n        justify-content: flex-end;\n        select{\n            color: rgba(34, 34, 96, 0.4);\n            &:focus, &:active{\n                color: rgba(34, 34, 96, 1);\n            }\n        }\n    }\n\n    .submit-btn{\n        button{\n            box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\n            &:hover{\n                background: var(--color-green) !important;\n            }\n        }\n    }\n`;\n_c2 = SavingFormStyled;\nexport default AcornForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"AcornForm\");\n$RefreshReg$(_c2, \"SavingFormStyled\");","map":{"version":3,"names":["React","useState","styled","DatePicker","useGlobalContext","Button","plus","AcornForm","addSaving","error","setError","inputState","setInputState","amount","date","multiplier","setMultiplier","roundOffValue","setRoundOffValue","totalAcorns","setTotalAcorns","isDecimal","num","roundNumber","number","ndigits","Math","ceil","calculateAcorns","parsedAmount","parseFloat","parsedMultiplier","parsedRoundOffValue","isNaN","roundedTotal","parseInt","acorns","alert","handleInput","name","e","target","value","handleSubmit","setAmount","preventDefault","SavingFormStyled","form"],"sources":["C:/Users/sanik/OneDrive/Desktop/Expense Tracker/expense-tracker_fullstack/frontend/src/Components/Acorn/AcornForm.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport DatePicker from 'react-datepicker'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useGlobalContext } from '../../context/globalContext';\r\nimport Button from '../Button/Button';\r\nimport { plus } from '../../utils/Icons';\r\n\r\n\r\nfunction AcornForm() {\r\n    const {addSaving, error, setError} = useGlobalContext()\r\n    const [inputState, setInputState] = useState({\r\n        amount: '',\r\n        date: '',\r\n    })\r\n    const { amount, date} = inputState;\r\n    // const [amount, setAmount] = useState('');\r\n  const [multiplier, setMultiplier] = useState('');\r\n  const [roundOffValue, setRoundOffValue] = useState('');\r\n  const [totalAcorns, setTotalAcorns] = useState(null);\r\n  function isDecimal(num) {\r\n    return (num % 1);\r\n }\r\n  const roundNumber = (number, ndigits) => {\r\n    debugger\r\n    if (!isDecimal(number)) {\r\n        return Math.ceil(number / 5) * 5;\r\n    } else {\r\n        return Math.ceil(number);\r\n    }\r\n    // if (ndigits === null) {\r\n    //   return Math.round(number);\r\n    // }\r\n    // const factor = Math.pow(10, ndigits);\r\n    // return Math.round(number * factor) / factor;/\r\n    \r\n  };\r\n\r\n  const calculateAcorns = () => {\r\n    debugger\r\n    if (amount !== '' && multiplier !== '' && roundOffValue !== '') {\r\n      const parsedAmount = parseFloat(amount);\r\n      const parsedMultiplier = parseFloat(multiplier);\r\n      const parsedRoundOffValue = parseFloat(roundOffValue);\r\n\r\n      if (!isNaN(parsedAmount) && !isNaN(parsedMultiplier) && !isNaN(parsedRoundOffValue)) {\r\n        // const total = parsedAmount * parsedMultiplier;\r\n        const roundedTotal = roundNumber(parsedAmount, parseInt(parsedRoundOffValue));\r\n        const acorns = roundedTotal - parsedAmount;\r\n        setTotalAcorns(acorns*parsedMultiplier);\r\n      } else {\r\n        alert('Please enter valid numbers');\r\n      }\r\n    } else {\r\n      alert('Please fill in all fields');\r\n    }\r\n  };\r\n    \r\n\r\n    const handleInput = name => e => {\r\n        // setAmount(e.target.value)\r\n        setInputState({...inputState, [name]: e.target.value})\r\n        setError('')\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        calculateAcorns()\r\n        setAmount({totalAcorns})\r\n        e.preventDefault()\r\n        // setInputState({...inputState, [name]: e.target.value})\r\n        addSaving(inputState)\r\n        setInputState({\r\n            amount: '',\r\n            date: '',\r\n        })\r\n    }\r\n\r\n    return (\r\n        <SavingFormStyled onSubmit={handleSubmit}>\r\n            {error && <p className='error'>{error}</p>}\r\n            {/* <div className=\"input-control\">\r\n                <input \r\n                    type=\"text\" \r\n                    value={title}\r\n                    name={'title'} \r\n                    placeholder=\"Expense Title\"\r\n                    onChange={handleInput('title')}\r\n                />\r\n            </div> */}\r\n            <div className=\"input-control\">\r\n                <input value={amount}  \r\n                    type=\"text\" \r\n                    name={'amount'} \r\n                    placeholder={'Expense Amount'}\r\n                    onChange={handleInput('amount')} \r\n                />\r\n            </div>\r\n            <div>\r\n        <label htmlFor=\"multiplier\">Multiplier:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"multiplier\"\r\n          value={multiplier}\r\n          onChange={(e) => setMultiplier(e.target.value)}\r\n        />\r\n      </div>\r\n            <div className=\"input-control\">\r\n                <DatePicker \r\n                    id='date'\r\n                    placeholderText='Enter A Date'\r\n                    selected={date}\r\n                    dateFormat=\"dd/MM/yyyy\"\r\n                    onChange={(date) => {\r\n                        setInputState({...inputState, date: date})\r\n                    }}\r\n                />\r\n            </div>\r\n            {/* <div className=\"selects input-control\">\r\n                <select required value={category} name=\"category\" id=\"category\" onChange={handleInput('category')}>\r\n                    <option value=\"\" disabled >Select Option</option>\r\n                    <option value=\"education\">Education</option>\r\n                    <option value=\"groceries\">Groceries</option>\r\n                    <option value=\"health\">Health</option>\r\n                    <option value=\"subscriptions\">Subscriptions</option>\r\n                    <option value=\"takeaways\">Takeaways</option>\r\n                    <option value=\"clothing\">Clothing</option>  \r\n                    <option value=\"travelling\">Travelling</option>  \r\n                    <option value=\"other\">Other</option>  \r\n                </select>\r\n            </div>\r\n            <div className=\"input-control\">\r\n                <textarea name=\"description\" value={description} placeholder='Add A Reference' id=\"description\" cols=\"30\" rows=\"4\" onChange={handleInput('description')}></textarea>\r\n                </div>*/}\r\n            <div className=\"submit-btn\">\r\n                <Button \r\n                    name={'Add Saving'}\r\n                    icon={plus}\r\n                    bPad={'.8rem 1.6rem'}\r\n                    bRad={'30px'}\r\n                    bg={'var(--color-accent'}\r\n                    color={'#fff'}\r\n                /> \r\n            </div>\r\n        </SavingFormStyled>\r\n    )\r\n}\r\n\r\n\r\nconst SavingFormStyled = styled.form`\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 2rem;\r\n    input, textarea, select{\r\n        font-family: inherit;\r\n        font-size: inherit;\r\n        outline: none;\r\n        border: none;\r\n        padding: .5rem 1rem;\r\n        border-radius: 5px;\r\n        border: 2px solid #fff;\r\n        background: transparent;\r\n        resize: none;\r\n        box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n        color: rgba(34, 34, 96, 0.9);\r\n        &::placeholder{\r\n            color: rgba(34, 34, 96, 0.4);\r\n        }\r\n    }\r\n    .input-control{\r\n        input{\r\n            width: 100%;\r\n        }\r\n    }\r\n\r\n    .selects{\r\n        display: flex;\r\n        justify-content: flex-end;\r\n        select{\r\n            color: rgba(34, 34, 96, 0.4);\r\n            &:focus, &:active{\r\n                color: rgba(34, 34, 96, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    .submit-btn{\r\n        button{\r\n            box-shadow: 0px 1px 15px rgba(0, 0, 0, 0.06);\r\n            &:hover{\r\n                background: var(--color-green) !important;\r\n            }\r\n        }\r\n    }\r\n`;\r\nexport default AcornForm"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}